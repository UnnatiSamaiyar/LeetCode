/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int>node;
    void inorder(TreeNode* root){
        if(!root) return;
        inorder(root->left);
        node.push_back(root->val);
        inorder(root->right);
    }
    bool findTarget(TreeNode* root, int k) {
        inorder(root);
        int sum = 0;
        int i=0;
        int j = node.size()-1;   
        while(i<j){
            sum = node[i]+node[j];
            if(sum == k) {
                return true;
            }
            else if(sum < k){
                i++;
            }
            else{
                j--;
            }
        }
        return false;
    }
};
