class Solution {
public:
    int count(vector<int>& potions, int& spell, long long& target){
        int n = potions.size(), i = n;
        int start = 0; 
        int end = n-1;
        while(start <= end){
            int mid = (start+end)/2;
            long long product = (long long)spell * potions[mid];
            if(product >= target){
                i = mid;
                end = mid - 1;
            }
            else start = mid + 1;
        }
        return (n-i);
    }
    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) {
        int n = spells.size();
        vector<int> temp(n);
        sort(potions.begin(),potions.end());
        for(int i=0; i<n; i++){
            temp[i] = count(potions, spells[i], success);
        }
        return temp;
    }
};
